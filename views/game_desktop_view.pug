html
    head

        //- Importing Ubuntu from Google Fonts
        link(href = 'https://fonts.googleapis.com/css?family=Ubuntu', rel = 'stylesheet')

        style
            //- Importing my own CSS file
            include ../static/style.css
        - var letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];

        script().

            // An AJAX function that updates 
            function setCurrentSquare(gameID, square) {

                // let data = { id: gameID, s: square };
                // console.log(data);

                // Initialises the xhttp library
                var xhttp = new XMLHttpRequest();

                // Called when the ready state of the request changes
                xhttp.onreadystatechange = function() {

                    // Checks that the request is complete
                    if (this.readyState == 4 && this.status == 200) {

                        // Outputs a confirmation message
                        console.log('setCurrentSquare request successful');
                   };
                };

                // Opens the GET request for the JSON file
                xhttp.open("POST", "/gameData", true);

                //
                xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded")

                // Sends the request
                xhttp.send("id=" + gameID + "&s=" + square);
            };

    body
        table
            td
                table(class = 'player_grid')

                    //- Creating the top row of the grid and displaying each column's letter
                    tr
                        th 
                        
                        //- Iterates through the letters from A to G, and creates a header for each
                        each letter in letters
                            th= letter
                        
                    //- Iterates through each row in the grid passed to the view
                    each row, r in grid
                        
                        //- Creates a row for each row
                        tr(class = 'player_grid_row')

                            //- Creates a side heading for each row
                            th(class = 'player_grid_head')= r + 1

                            //- Iterates through each column
                            each cellType, c in row
                            
                                //- Creates a cell for each column in the row
                                td(class = 'player_grid_cell')

                                    if (cellType == 0)
                                        - let cellName = letters[c] + (r + 1);
                                        button(class= cellName, onclick = 'setCurrentSquare(' + gameID + ', "' + cellName + '")') Choose

            td
                //- Creates the "choose next square" list from the fetched JSON data
                h1 Choose Next Square
                ol

                //- Iterates through each item in the list, and creates a list item from it
                each chooser in chooseList
                    li= chooser
