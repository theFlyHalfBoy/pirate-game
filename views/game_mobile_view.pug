
html
    head
        
        //- Importing Ubuntu from Google Fonts
        link(href = 'https://fonts.googleapis.com/css?family=Ubuntu', rel = 'stylesheet')
        
        style
            //- Importing my own CSS file
            include ../static/style.css

        script().

            // Assigns the gameID passed to the Pug view to a JS variable
            gameID = #{gameID};

            // An AJAX function that updates 
            function checkGrid(gameID) {

                // Initialises the xhttp library
                var xhttp = new XMLHttpRequest();

                // Called when the ready state of the request changes
                xhttp.onreadystatechange = function() {

                    // Checks that the request is complete
                    if (this.readyState == 4 && this.status == 200) {

                        // Converts the retrieved JSON string to a JS object
                        let gameData = JSON.parse(this.responseText);

                        console.log(gameData.currentSquare);
                   };
                };

                // Opens the GET request for the JSON file
                xhttp.open("GET", "gameData" + gameID + ".json", true);

                // Sends the request
                xhttp.send();
            };

            setInterval(checkGrid, 2000, gameID);

    body
        table(class = 'player_grid')
            //- Creating the top row of the grid and displaying each column's letter
            tr
                th 
                th A
                th B
                th C
                th D
                th E
                th F
                th G

            //- Iterates through each row in the grid passed to the view
            each row, index in grid

                //- Creates a row for each row
                tr(class = 'player_grid_row')

                    //- Creates a side heading for each row
                    th(class = 'player_grid_head')= index + 1

                    //- Iterated through each column
                    each cellType in row

                        //- Creates a cell for each column in the row
                        //- that contains the user's custom grid input
                        td(class = 'player_grid_cell')= cellType
